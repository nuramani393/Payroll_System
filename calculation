import 'dart:html';
import 'dart:math';

void main() {
  window.onLoad.listen((Event e) {
    // Attach an event listener to the button
    var calculateButton = querySelector('#calculate-button');
    calculateButton!.onClick.listen(calculatePay);
  });
}

void calculatePay(MouseEvent event) {
  // Prevent the default behavior of the button
  event.preventDefault();

  // Create an empty list to store the employee's working hours and datetime
  List<Map<String, dynamic>> employeeData = [];

  // Ask the user to input working hours and datetime for each slot
  for (int i = 1; i <= 3; i++) {
    var hoursInput = querySelector('#hours$i') as InputElement;
    var datetimeInput = querySelector('#datetime$i') as InputElement;

    int hours = int.parse(hoursInput.value!);
    String datetimeString = datetimeInput.value!;
    DateTime datetime = DateTime.parse(datetimeString);

    // Store the input data in a map and add it to the list
    Map<String, dynamic> data = {
      'hours': hours,
      'datetime': datetime,
    };
    employeeData.add(data);
  }

  // Calculate the pay and EPF for each employee and display the details
  String output = "";
  for (int i = 0; i < employeeData.length; i++) {
    // Exclude weekends from the calculation
    if (_isWeekday(employeeData[i]['datetime'])) {
      // Calculate the start time if the employee arrived late to work
      int startHour = 9;
      if (employeeData[i]['datetime'].hour > 9) {
        startHour = employeeData[i]['datetime'].hour;
      }

      // Calculate the total working hours and the pay
      int totalHours = max(0, employeeData[i]['hours'] - (startHour - 9));
      double pay = totalHours * 6;

      // Calculate the EPF
      double epf = pay * 0.11;

      // Display the details
      output += 'Slot #${i + 1}:<br>';
      output += 'Working hours: ${employeeData[i]['hours']}<br>';
      output += 'Date and time: ${employeeData[i]['datetime']}<br>';
      output += 'Total working hours: $totalHours<br>';
      output += 'Pay: RM $pay<br>';
      output += 'EPF: RM ${epf.toStringAsFixed(2)}<br><br>';
    }
  }

  // Display the output on the webpage
  var outputDiv = querySelector('#output') as DivElement;
  outputDiv.innerHtml = output;
}

// Check if a given date is a weekday (Monday - Friday)
bool _isWeekday(DateTime date) {
  return date.weekday >= 1 && date.weekday <= 5;
}
